version: '3.8'

services:
  api:
    build: .
    container_name: video-event-detection-api
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./models:/app/models
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - BATCH_SIZE=16
      - CONFIDENCE_THRESHOLD=0.3
    command: python -m src.api.main
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  web:
    build: .
    container_name: video-event-detection-web
    ports:
      - "8501:8501"
    volumes:
      - ./data:/app/data
      - ./models:/app/models
    environment:
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
    command: streamlit run src/web/streamlit_app.py --server.port=8501 --server.address=0.0.0.0
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped

  # Optional: Redis for caching and task queues
  redis:
    image: redis:7-alpine
    container_name: video-event-detection-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: video-event-detection-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - web
    restart: unless-stopped
    profiles:
      - production

volumes:
  redis_data:

networks:
  default:
    name: video-event-detection-network